name: Create new tag

on:
  workflow_dispatch:
    inputs:
      increment:
        description: 'Increment for version'
        required: true
        default: 'patch'
        type: choice
        options:
          - prepatch
          - patch
          - preminor
          - minor
          - premajor
          - major

jobs:
  check:
    uses: ./.github/workflows/validate.yml
  create-tag:
    runs-on: ubuntu-latest
    needs: check
    environment: deploy # env needed to access PAT
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.PAT }}
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      # Compute new version for monorepo (not tagged)
      - name: Set version for monorepo root
        run: npm --no-git-tag-version version "${{ github.event.inputs.increment }}"
      - name: Set version for library
        run: |
          cd libs/material-file-input/
          npm --no-git-tag-version version "${{ github.event.inputs.increment }}"
      - name: Get newly set monorepo version
        id: repo-version
        uses: martinbeentjes/npm-get-version-action@main
      - run: echo "${{ steps.repo-version.outputs.current-version }}"
      # Apply changes > Git
      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Commit changes with tag
        run: |
          git add package.json package-lock.json libs/material-file-input/package.json
          git commit -m "Release version ${{ steps.repo-version.outputs.current-version }}"
          git push
          git tag -a "v${{ steps.repo-version.outputs.current-version }}" -m "Tag version ${{ steps.repo-version.outputs.current-version }}"
          git push --tags

  publish:
    runs-on: ubuntu-latest
    environment: deploy
    # if Running on the default branch
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci --no-audit
      - run: npm run build:lib
      - name: Publish to npm
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          # dry-run: true
      - if: steps.publish.outputs.type != 'none'
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"

  create-release:
    runs-on: ubuntu-latest
    # if Running on the default branch
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Get the new tag version
        id: tag_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Create draft release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
